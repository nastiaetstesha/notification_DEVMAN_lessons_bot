import requests
import time
import logging


logger = logging.getLogger(__name__)
API_TIMEOUT = 5

def get_review_from_api(dvmn_token, params):
    url = "https://dvmn.org/api/long_polling/"
    headers = {"Authorization": f"Token {dvmn_token}"}
    response = requests.get(url, headers=headers, params=params, timeout=API_TIMEOUT)
    response.raise_for_status()
    return response.json()


def handle_review(review, bot, chat_id, params):
    if review["status"] == "timeout":
        params["timestamp"] = review["timestamp_to_request"]
        logger.info("‚è≥ –¢–∞–π–º–∞—É—Ç: –Ω–æ–≤—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç, –∂–¥—É –¥–∞–ª—å—à–µ...")

    elif review["status"] == "found":
        params["timestamp"] = review["last_attempt_timestamp"]
        for attempt in review["new_attempts"]:
            lesson_title = attempt["lesson_title"]
            is_negative = attempt["is_negative"]

            message = (
                f"üìù –£ –≤–∞—Å –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Ä–∞–±–æ—Ç—É ¬´{lesson_title}¬ª.\n"
                f"{'‚ùóÔ∏è–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ —Ä–∞–±–æ—Ç–µ –Ω–∞—à–ª–∏—Å—å –æ—à–∏–±–∫–∏.'
                   if is_negative else
                   '‚úÖ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –≤—Å—ë –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, '
                   '–º–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É!'}"
            )
            bot.send_message(chat_id=chat_id, text=message)
            logger.info(f"üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É—Ä–æ–∫—É: {lesson_title}")


def listen_reviews(dvmn_token, bot, chat_id):
    logger.info("üì° –ó–∞–ø—É—â–µ–Ω–æ —Å–ª–µ–∂–µ–Ω–∏–µ –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ Devman...")
    params = {}

    while True:
        try:
            review = get_review_from_api(dvmn_token, params)
            handle_review(review, bot, chat_id, params)

        except requests.exceptions.ReadTimeout:
            if API_TIMEOUT < 10:
                logger.debug(
                    "ReadTimeout (–∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞–π–º–∞—É—Ç) ‚Äî –ø–æ–≤—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞"
                    )
            else:
                logger.warning(
                    "‚ö†Ô∏è ReadTimeout: –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤–æ–≤—Ä–µ–º—è. " \
                    "–ü–æ–≤—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞..."
                    )
        except requests.exceptions.ConnectionError:
            logger.error("üîå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ñ–¥—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...")
            time.sleep(30)
        except Exception:
            logger.exception("üí• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:")
            time.sleep(30)


def start(update, context):
    user_first_name = update.message.from_user.first_name
    update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_first_name}! –Ø Devman Bot.\n\n"
        "–Ø —Å–æ–æ–±—â—É —Ç–µ–±–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ç–≤–æ—è —Ä–∞–±–æ—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –Ω–∞ dvmn.org.\n"
        "–ü—Ä–æ—Å—Ç–æ –∂–¥–∏ ‚Äî —è –Ω–∞–ø–∏—à—É, –∫–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤–æ—Å—Ç–∏ üòâ"
    )


def help_command(update, context):
    update.message.reply_text(
        "üí° –Ø –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–≤–æ–∏—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π —Å dvmn.org –∏ —Å—Ä–∞–∑—É —Å–æ–æ–±—â–∞—é –≤ Telegram, "
        "–∫–æ–≥–¥–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ä–∞–±–æ—Ç—É.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤—å –º–µ–Ω—è –∑–∞–ø—É—â–µ–Ω–Ω—ã–º ‚Äî –∏ —è –≤—Å—ë —Å–¥–µ–ª–∞—é –∑–∞ —Ç–µ–±—è!"
    )
